/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt {
    flavor = "balanced";
    quick-tap-ms = <180>;
};

&lt { quick-tap-ms = <180>; };

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp STAR &kp LS(T) &kp Y &kp LS(C) &kp H &kp N0 &kp DOT &kp S &kp N0 &kp EXCL &kp M &kp LS(U) &kp C &kp H>;
            label = "PW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_base {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp TAB                          &kp N1  &kp N2       &kp N3          &kp N4          &kp N5                                                         &kp N6       &kp N7          &kp N8          &kp N9         &kp N0    &kp MINUS
&kp LEFT_BRACKET                 &kp Q   &kp W        &kp E           &kp R           &kp T                                                          &kp Y        &kp U           &kp I           &kp O          &kp P     &kp RIGHT_BRACKET
&mt LA(LS(LC(LEFT_GUI))) ESCAPE  &kp A   &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G                                                          &kp H        &mt LEFT_GUI J  &mt LEFT_ALT K  &mt LCTRL L    &kp SEMI  &kp SQT
&kp GRAVE                        &kp Z   &kp X        &kp C           &kp V           &kp B            &kp C_MUTE        &none                       &kp N        &kp M           &kp COMMA       &kp DOT        &kp FSLH  &kp PLUS
                                         &kp DELETE   &kp LEFT        &kp RIGHT       &lt 1 BACKSPACE  &kp LEFT_SHIFT    &mt LC(LS(LEFT_ALT)) ENTER  &lt 2 SPACE  &kp UP          &kp DOWN        &kp BACKSLASH
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOL_UP>,
                <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        mac_lower {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1            &bt BT_SEL 2            &none                    &none                            &none  &kp KP_NLCK      &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_SUBTRACT  &kp PRINTSCREEN
&none       &kp LS(LG(N5))  &none                   &kp LA(LS(UP_ARROW))    &none                    &none                            &none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &kp SCROLLLOCK
&none       &none           &kp LA(LS(LEFT_ARROW))  &kp LA(LS(DOWN_ARROW))  &kp LA(LS(RIGHT_ARROW))  &none                            &none  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ENTER     &kp PAUSE_BREAK
&none       &kp LG(Z)       &kp LG(X)               &kp LG(C)               &kp LG(V)                &none   &none             &none  &none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER     &none
                            &none                   &none                   &none                    &trans  &kp LEFT_SHIFT    &none  &none  &kp KP_NUMBER_0  &none            &kp KP_DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        mac_raise {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &kp F1  &kp F2              &kp F3              &kp F4               &kp F5                  &kp F6      &kp F7         &kp F8    &kp F9     &kp F10  &kp F11
&none       &none   &kp PSCRN           &kp LA(UP_ARROW)    &none                &none                   &kp HOME    &kp PAGE_UP    &kp UP    &none      &pw      &kp F12
&none       &none   &kp LA(LEFT_ARROW)  &kp LA(DOWN_ARROW)  &kp LA(RIGHT_ARROW)  &none                   &kp END     &kp LEFT       &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&none       &none   &none               &none               &none                &none   &none    &none  &kp INSERT  &kp PAGE_DOWN  &none     &none      &none    &none
                    &none               &none               &none                &none   &none    &none  &trans      &none          &none     &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        win_base {
            display-name = "default";
            bindings = <
&kp TAB                          &kp N1  &kp N2       &kp N3          &kp N4          &kp N5                                                         &kp N6       &kp N7          &kp N8          &kp N9         &kp N0    &kp MINUS
&kp LEFT_BRACKET                 &kp Q   &kp W        &kp E           &kp R           &kp T                                                          &kp Y        &kp U           &kp I           &kp O          &kp P     &kp RIGHT_BRACKET
&mt LA(LS(LC(LEFT_GUI))) ESCAPE  &kp A   &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G                                                          &kp H        &mt LEFT_GUI J  &mt LEFT_ALT K  &mt LCTRL L    &kp SEMI  &kp SQT
&kp GRAVE                        &kp Z   &kp X        &kp C           &kp V           &kp B            &kp C_MUTE        &none                       &kp N        &kp M           &kp COMMA       &kp DOT        &kp FSLH  &kp PLUS
                                         &kp DELETE   &kp LEFT        &kp RIGHT       &lt 1 BACKSPACE  &kp LEFT_SHIFT    &mt LC(LS(LEFT_ALT)) ENTER  &lt 2 SPACE  &kp UP          &kp DOWN        &kp BACKSLASH
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOL_UP>,
                <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
